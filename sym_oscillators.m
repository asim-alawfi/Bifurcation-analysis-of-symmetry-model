function varargout=sym_oscillators(action,varargin)
%% Automatically generated with matlabFunction
% 
%#ok<*DEFNU,*INUSD,*INUSL>

switch action
  case 'ntau'
   varargout{1}=2;
   return
  case 'npar'
   varargout{1}=5;
   return
  case 'tp_del'
   varargout{1}=0;
   return
  case 'maxorder'
   varargout{1}=2;
   return
  case 'directional_derivative'
   varargout{1}=1;
   return
end
ind=varargin{1};
order=varargin{2};
nout=varargin{3};
f=str2func(sprintf('sym_oscillators_%s_%d_%d',action,ind,order));
varargout=cell(nout,1);
[varargout{:}]=f(varargin{4:end});
end



function [out1,out2,out3,out4] = sym_oscillators_rhs_1_0(x11,x21,x31,x41,x12,x22,x32,x42,x13,x23,x33,x43,a,c_ext,delta,tau_s,tau_c,x11_d,x21_d,x31_d,x41_d,x12_d,x22_d,x32_d,x42_d,x13_d,x23_d,x33_d,x43_d,a_d,c_ext_d,delta_d,tau_s_d,tau_c_d)
%SYM_OSCILLATORS_RHS_1_0
%    [OUT1,OUT2,OUT3,OUT4] = SYM_OSCILLATORS_RHS_1_0(X11,X21,X31,X41,X12,X22,X32,X42,X13,X23,X33,X43,A,C_EXT,DELTA,TAU_S,TAU_C,X11_D,X21_D,X31_D,X41_D,X12_D,X22_D,X32_D,X42_D,X13_D,X23_D,X33_D,X43_D,A_D,C_EXT_D,DELTA_D,TAU_S_D,TAU_C_D)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    16-Dec-2024 20:20:30

t2 = -x23;
t3 = -x33;
t4 = -x43;
t5 = t2+x13;
t6 = t3+x13;
t7 = t4+x13;
t8 = t3+x23;
t9 = t4+x23;
t10 = t4+x33;
t11 = c_ext.*t5;
t12 = c_ext.*t6;
t13 = c_ext.*t7;
out1 = delta-t11-t12-t13-a.*x12-x11.^3;
if nargout > 1
    t14 = c_ext.*t8;
    t15 = c_ext.*t9;
    out2 = delta+t11-t14-t15-a.*x22-x21.^3;
end
if nargout > 2
    t16 = c_ext.*t10;
    out3 = delta+t12+t14-t16-a.*x32-x31.^3;
end
if nargout > 3
    out4 = delta+t13+t15+t16-a.*x42-x41.^3;
end
end


function [out1,out2,out3,out4] = sym_oscillators_rhs_1_1(x11,x21,x31,x41,x12,x22,x32,x42,x13,x23,x33,x43,a,c_ext,delta,tau_s,tau_c,x11_d,x21_d,x31_d,x41_d,x12_d,x22_d,x32_d,x42_d,x13_d,x23_d,x33_d,x43_d,a_d,c_ext_d,delta_d,tau_s_d,tau_c_d)
%SYM_OSCILLATORS_RHS_1_1
%    [OUT1,OUT2,OUT3,OUT4] = SYM_OSCILLATORS_RHS_1_1(X11,X21,X31,X41,X12,X22,X32,X42,X13,X23,X33,X43,A,C_EXT,DELTA,TAU_S,TAU_C,X11_D,X21_D,X31_D,X41_D,X12_D,X22_D,X32_D,X42_D,X13_D,X23_D,X33_D,X43_D,A_D,C_EXT_D,DELTA_D,TAU_S_D,TAU_C_D)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    16-Dec-2024 20:20:30

t2 = -x23;
t3 = -x33;
t4 = -x43;
t5 = -x23_d;
t6 = -x33_d;
t7 = -x43_d;
t8 = t2+x13;
t9 = t3+x13;
t10 = t4+x13;
t11 = t3+x23;
t12 = t4+x23;
t13 = t4+x33;
t14 = t5+x13_d;
t15 = t6+x13_d;
t16 = t7+x13_d;
t17 = t6+x23_d;
t18 = t7+x23_d;
t19 = t7+x33_d;
t20 = c_ext_d.*t8;
t21 = c_ext_d.*t9;
t22 = c_ext_d.*t10;
t23 = c_ext_d.*t11;
t24 = c_ext_d.*t12;
t25 = c_ext_d.*t13;
t26 = c_ext.*t14;
t27 = c_ext.*t15;
t28 = c_ext.*t16;
out1 = delta_d-t20-t21-t22-t26-t27-t28-a.*x12_d-a_d.*x12-x11.^2.*x11_d.*3.0;
if nargout > 1
    t29 = c_ext.*t17;
    t30 = c_ext.*t18;
    out2 = delta_d+t20-t23-t24+t26-t29-t30-a.*x22_d-a_d.*x22-x21.^2.*x21_d.*3.0;
end
if nargout > 2
    t31 = c_ext.*t19;
    out3 = delta_d+t21+t23-t25+t27+t29-t31-a.*x32_d-a_d.*x32-x31.^2.*x31_d.*3.0;
end
if nargout > 3
    out4 = delta_d+t22+t24+t25+t28+t30+t31-a.*x42_d-a_d.*x42-x41.^2.*x41_d.*3.0;
end
end


function [out1,out2,out3,out4] = sym_oscillators_rhs_1_2(x11,x21,x31,x41,x12,x22,x32,x42,x13,x23,x33,x43,a,c_ext,delta,tau_s,tau_c,x11_d,x21_d,x31_d,x41_d,x12_d,x22_d,x32_d,x42_d,x13_d,x23_d,x33_d,x43_d,a_d,c_ext_d,delta_d,tau_s_d,tau_c_d)
%SYM_OSCILLATORS_RHS_1_2
%    [OUT1,OUT2,OUT3,OUT4] = SYM_OSCILLATORS_RHS_1_2(X11,X21,X31,X41,X12,X22,X32,X42,X13,X23,X33,X43,A,C_EXT,DELTA,TAU_S,TAU_C,X11_D,X21_D,X31_D,X41_D,X12_D,X22_D,X32_D,X42_D,X13_D,X23_D,X33_D,X43_D,A_D,C_EXT_D,DELTA_D,TAU_S_D,TAU_C_D)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    16-Dec-2024 20:20:31

t2 = -x23_d;
t3 = -x33_d;
t4 = -x43_d;
t5 = t2+x13_d;
t6 = t3+x13_d;
t7 = t4+x13_d;
t8 = t3+x23_d;
t9 = t4+x23_d;
t10 = t4+x33_d;
t11 = c_ext_d.*t5.*2.0;
t12 = c_ext_d.*t6.*2.0;
t13 = c_ext_d.*t7.*2.0;
out1 = -t11-t12-t13-a_d.*x12_d.*2.0-x11.*x11_d.^2.*6.0;
if nargout > 1
    t14 = c_ext_d.*t8.*2.0;
    t15 = c_ext_d.*t9.*2.0;
    out2 = t11-t14-t15-a_d.*x22_d.*2.0-x21.*x21_d.^2.*6.0;
end
if nargout > 2
    t16 = c_ext_d.*t10.*2.0;
    out3 = t12+t14-t16-a_d.*x32_d.*2.0-x31.*x31_d.^2.*6.0;
end
if nargout > 3
    out4 = t13+t15+t16-a_d.*x42_d.*2.0-x41.*x41_d.^2.*6.0;
end
end

